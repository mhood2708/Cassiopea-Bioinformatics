# Freebayes was used as the varient calling tool for these Cassiopea xamachana samples

# No old code as this was done retroactively

#!/bin/bash
#SBATCH --time=48:00:00   # walltime
#SBATCH --ntasks=8   # number of processor cores (i.e. tasks)
#SBATCH --nodes=1   # number of nodes
#SBATCH --mem=32G   # memory per CPU core
#SBATCH -J "fb_loop"   # job name
#SBATCH --output "fb_loop"

#Upload Module
module load GCC/11.2.0
module load OpenMPI/4.1.1
module load freebayes/1.3.6-R-4.1.2

# Define the directory containing bam files
input_dir="/scratch/group/kitchen-group/lab/michael/Cx_Gendiversity/Picard_Output"

# Define the output directory for Freebayes results
output_dir="/scratch/group/kitchen-group/lab/michael/Cx_Gendiversity/Looped_Freebayes"

# Define the Reference Genome
reference_dir="/scratch/group/kitchen-group/lab/michael/Cx_Gendiversity/RefGenome/Casxa1_AssemblyScaffolds_Repeatmasked.fasta"

# Find all *_dedup.bam files in the input directory and loop through them
find "$input_dir" -type f -name "*_dedup.bam" | while IFS= read -r bam_file; do
  # Extract the base filename without the _dedup.bam extension
  base_filename=$(basename "$bam_file" _dedup.bam)

  # Define the output file for freebayes
  vcf_file="$output_dir/${base_filename}.vcf"

  # Debug: Print the file path being processed
  echo "Processing $bam_file"
  echo "Output will be saved to $vcf_file"

  # Run freebayes on the bam file
  freebayes -f "$reference_dir" \
  --pooled-continuous \
  --ploidy 2 \
  "$bam_file" \
  > "$vcf_file"
done

